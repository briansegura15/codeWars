DESCRIPTION:
I wrote a class Class, with a private static property foo and a getter to retrieve it:

class Class {
  static #foo = 42;

  static get foo() {
    return this.#foo;
  }
}
Class.foo; // 42
However, when I create a class Subclass that inherits from Class, the code breaks:

class Subclass extends Class {}
Subclass.foo; // Error !
Can you fix the code ?

Modify Class so that Subclass.foo will work correctly. This should also work for any level of inheritance from Class, e.g. with:

class Deepclass extends Subclass {}
Deepclass.foo; // should return 42

P:
what if we are given nothing or NaN
R:
shoul return the private static method in a Subclass
E:
given above
P:
create a class
the class has a static property and static getter
private static methods are only available to the class itself
so we have to use the class name in the return statement to access the private class method