As a part of this Kata, you need to create a function that when provided with a triplet, returns the index of the numerical element that lies between the other two elements.

The input to the function will be an array of three distinct numbers (Haskell: a tuple).

For example:

gimme([2, 3, 1]) => 0
2 is the number that fits between 1 and 3 and the index of 2 in the input array is 0.

Another example (just to make sure it is clear):

gimme([5, 10, 14]) => 1
10 is the number that fits between 5 and 14 and the index of 10 in the input array is 1.

P:
what if there are letters in the array
R:
should return the index of the number that fits inside the other 2 integers
E: 
look above
P:
create a function that takes in an array as an argument
use the math.max and mins to ascertain the high and low value
loop thru the array
use conditional value to return the correct index value from the array